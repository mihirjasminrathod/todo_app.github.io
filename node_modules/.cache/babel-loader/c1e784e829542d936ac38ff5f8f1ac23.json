{"ast":null,"code":"var _jsxFileName = \"/Users/mihirjasminrathod/todo_app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Todo from './Todo';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport './App.css';\nimport db from './firebase';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(''); //when the app loads, we need to listen to the database and fetch new todos as they get added/deleted\n\n  useEffect(() => {\n    //this code here... fires when the app.js loads\n    db.collection('todos').onSnapshot(snapshot => {\n      // console.log(snapshot.docs.map(doc => doc.data()));\n      setTodos(snapshot.docs.map(doc => doc.data().todo));\n    });\n  }, []);\n\n  const addTodo = event => {\n    //this will fire off when we click the button\n    event.preventDefault(); //this will prevent from refreshing\n\n    console.log('ü•∂', 'Im working!!!');\n    setTodos([...todos, input]);\n    setInput(''); //clear up the input after clicking add todo button\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \" Hello world \\u2764\\uFE0F \"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \" \\u2705Write a Todo\"), /*#__PURE__*/React.createElement(Input, {\n    value: input,\n    onChange: event => setInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: !input,\n    type: \"submit\",\n    onClick: addTodo,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Add ToDo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(Todo, {\n    text: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }) // <li>{todo}</li>\n  )));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mihirjasminrathod/todo_app/src/App.js"],"names":["React","useState","useEffect","Todo","Button","FormControl","Input","InputLabel","db","App","todos","setTodos","input","setInput","collection","onSnapshot","snapshot","docs","map","doc","data","todo","addTodo","event","preventDefault","console","log","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,KAA9B,EAAqCC,UAArC,QAAuD,mBAAvD;AACA,OAAO,WAAP;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAIb;;AACFC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBC,UAAvB,CAAkCC,QAAQ,IAAI;AAC5C;AACAL,MAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,GAAWC,IAApC,CAAD,CAAR;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;;AASE,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB;AACAA,IAAAA,KAAK,CAACC,cAAN,GAFyB,CAED;;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,eAAlB;AACAf,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,KAAX,CAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR,CALyB,CAKX;AACf,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAqB,IAAA,QAAQ,EAAEW,KAAK,IAAIV,QAAQ,CAACU,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHA,eAQA,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,CAAChB,KAAnB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,OAAO,EAAEU,OAAjD;AAA0D,IAAA,OAAO,EAAC,WAAlE;AAA8E,IAAA,KAAK,EAAC,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA,CAFF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,KAAK,CAACQ,GAAN,CAAUG,IAAI,iBACb,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,CAEb;AAFD,GADH,CAhBF,CADF;AAyBD;;AAED,eAAeZ,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Todo from './Todo';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport './App.css';\nimport db from './firebase';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n\n  //when the app loads, we need to listen to the database and fetch new todos as they get added/deleted\nuseEffect(() => {\n  //this code here... fires when the app.js loads\n  db.collection('todos').onSnapshot(snapshot => {\n    // console.log(snapshot.docs.map(doc => doc.data()));\n    setTodos(snapshot.docs.map(doc => doc.data().todo))\n  })\n}, []);\n\n\n  const addTodo = (event) => {\n    //this will fire off when we click the button\n    event.preventDefault(); //this will prevent from refreshing\n    console.log('ü•∂', 'Im working!!!');\n    setTodos([...todos, input]);\n    setInput(''); //clear up the input after clicking add todo button\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1> Hello world ‚ù§Ô∏è </h1>\n      <form>\n      {/* <input value={input} onChange={event => setInput(event.target.value)}/> */}\n      \n      <FormControl>\n        <InputLabel> ‚úÖWrite a Todo</InputLabel>\n        <Input value={input} onChange={event => setInput(event.target.value)}/>\n      </FormControl>\n      \n      <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\">\n        Add ToDo\n      </Button>\n      {/* <button type=\"submit\" onClick={addTodo}> Add Todo </button> */}\n      </form>\n      \n      <ul>\n        {todos.map(todo => (\n          <Todo text={todo}/>\n          // <li>{todo}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}